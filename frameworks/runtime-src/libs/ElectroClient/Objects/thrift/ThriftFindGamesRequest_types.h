/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftFindGamesRequest_TYPES_H
#define ThriftFindGamesRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"


#include "ThriftFlattenedEsObject_types.h"
#include "ThriftSearchCriteria_types.h"


namespace es {

class ThriftFindGamesRequest;

typedef struct _ThriftFindGamesRequest__isset {
  _ThriftFindGamesRequest__isset() : searchCriteria(false) {}
  bool searchCriteria :1;
} _ThriftFindGamesRequest__isset;

class ThriftFindGamesRequest {
 public:

  ThriftFindGamesRequest(const ThriftFindGamesRequest&);
  ThriftFindGamesRequest& operator=(const ThriftFindGamesRequest&);
  ThriftFindGamesRequest() {
  }

  virtual ~ThriftFindGamesRequest() throw();
   ::es::ThriftSearchCriteria searchCriteria;

  _ThriftFindGamesRequest__isset __isset;

  void __set_searchCriteria(const  ::es::ThriftSearchCriteria& val);

  bool operator == (const ThriftFindGamesRequest & rhs) const
  {
    if (!(searchCriteria == rhs.searchCriteria))
      return false;
    return true;
  }
  bool operator != (const ThriftFindGamesRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftFindGamesRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftFindGamesRequest &a, ThriftFindGamesRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftFindGamesRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
