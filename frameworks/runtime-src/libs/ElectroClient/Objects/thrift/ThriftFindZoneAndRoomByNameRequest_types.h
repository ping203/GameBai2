/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftFindZoneAndRoomByNameRequest_TYPES_H
#define ThriftFindZoneAndRoomByNameRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"




namespace es {

class ThriftFindZoneAndRoomByNameRequest;

typedef struct _ThriftFindZoneAndRoomByNameRequest__isset {
  _ThriftFindZoneAndRoomByNameRequest__isset() : zoneName(false), roomName(false) {}
  bool zoneName :1;
  bool roomName :1;
} _ThriftFindZoneAndRoomByNameRequest__isset;

class ThriftFindZoneAndRoomByNameRequest {
 public:

  ThriftFindZoneAndRoomByNameRequest(const ThriftFindZoneAndRoomByNameRequest&);
  ThriftFindZoneAndRoomByNameRequest& operator=(const ThriftFindZoneAndRoomByNameRequest&);
  ThriftFindZoneAndRoomByNameRequest() : zoneName(), roomName() {
  }

  virtual ~ThriftFindZoneAndRoomByNameRequest() throw();
  std::string zoneName;
  std::string roomName;

  _ThriftFindZoneAndRoomByNameRequest__isset __isset;

  void __set_zoneName(const std::string& val);

  void __set_roomName(const std::string& val);

  bool operator == (const ThriftFindZoneAndRoomByNameRequest & rhs) const
  {
    if (!(zoneName == rhs.zoneName))
      return false;
    if (!(roomName == rhs.roomName))
      return false;
    return true;
  }
  bool operator != (const ThriftFindZoneAndRoomByNameRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftFindZoneAndRoomByNameRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftFindZoneAndRoomByNameRequest &a, ThriftFindZoneAndRoomByNameRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftFindZoneAndRoomByNameRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
