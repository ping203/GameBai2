/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftGetRoomsInZoneRequest_TYPES_H
#define ThriftGetRoomsInZoneRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"




namespace es {

class ThriftGetRoomsInZoneRequest;

typedef struct _ThriftGetRoomsInZoneRequest__isset {
  _ThriftGetRoomsInZoneRequest__isset() : zoneId(false), zoneName(false) {}
  bool zoneId :1;
  bool zoneName :1;
} _ThriftGetRoomsInZoneRequest__isset;

class ThriftGetRoomsInZoneRequest {
 public:

  ThriftGetRoomsInZoneRequest(const ThriftGetRoomsInZoneRequest&);
  ThriftGetRoomsInZoneRequest& operator=(const ThriftGetRoomsInZoneRequest&);
  ThriftGetRoomsInZoneRequest() : zoneId(0), zoneName() {
  }

  virtual ~ThriftGetRoomsInZoneRequest() throw();
  int32_t zoneId;
  std::string zoneName;

  _ThriftGetRoomsInZoneRequest__isset __isset;

  void __set_zoneId(const int32_t val);

  void __set_zoneName(const std::string& val);

  bool operator == (const ThriftGetRoomsInZoneRequest & rhs) const
  {
    if (!(zoneId == rhs.zoneId))
      return false;
    if (!(zoneName == rhs.zoneName))
      return false;
    return true;
  }
  bool operator != (const ThriftGetRoomsInZoneRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftGetRoomsInZoneRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftGetRoomsInZoneRequest &a, ThriftGetRoomsInZoneRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftGetRoomsInZoneRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
