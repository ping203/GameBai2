/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftLogOutRequest_TYPES_H
#define ThriftLogOutRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"




namespace es {

class ThriftLogOutRequest;

typedef struct _ThriftLogOutRequest__isset {
  _ThriftLogOutRequest__isset() : dropConnection(false), dropAllConnections(false) {}
  bool dropConnection :1;
  bool dropAllConnections :1;
} _ThriftLogOutRequest__isset;

class ThriftLogOutRequest {
 public:

  ThriftLogOutRequest(const ThriftLogOutRequest&);
  ThriftLogOutRequest& operator=(const ThriftLogOutRequest&);
  ThriftLogOutRequest() : dropConnection(0), dropAllConnections(0) {
  }

  virtual ~ThriftLogOutRequest() throw();
  bool dropConnection;
  bool dropAllConnections;

  _ThriftLogOutRequest__isset __isset;

  void __set_dropConnection(const bool val);

  void __set_dropAllConnections(const bool val);

  bool operator == (const ThriftLogOutRequest & rhs) const
  {
    if (!(dropConnection == rhs.dropConnection))
      return false;
    if (!(dropAllConnections == rhs.dropAllConnections))
      return false;
    return true;
  }
  bool operator != (const ThriftLogOutRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftLogOutRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftLogOutRequest &a, ThriftLogOutRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftLogOutRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
