/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftPluginRequest_TYPES_H
#define ThriftPluginRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"


#include "ThriftFlattenedEsObject_types.h"


namespace es {

class ThriftPluginRequest;

typedef struct _ThriftPluginRequest__isset {
  _ThriftPluginRequest__isset() : pluginName(false), zoneId(false), roomId(false), sessionKey(false), parameters(false) {}
  bool pluginName :1;
  bool zoneId :1;
  bool roomId :1;
  bool sessionKey :1;
  bool parameters :1;
} _ThriftPluginRequest__isset;

class ThriftPluginRequest {
 public:

  ThriftPluginRequest(const ThriftPluginRequest&);
  ThriftPluginRequest& operator=(const ThriftPluginRequest&);
  ThriftPluginRequest() : pluginName(), zoneId(0), roomId(0), sessionKey(0) {
  }

  virtual ~ThriftPluginRequest() throw();
  std::string pluginName;
  int32_t zoneId;
  int32_t roomId;
  int32_t sessionKey;
   ::es::ThriftFlattenedEsObject parameters;

  _ThriftPluginRequest__isset __isset;

  void __set_pluginName(const std::string& val);

  void __set_zoneId(const int32_t val);

  void __set_roomId(const int32_t val);

  void __set_sessionKey(const int32_t val);

  void __set_parameters(const  ::es::ThriftFlattenedEsObject& val);

  bool operator == (const ThriftPluginRequest & rhs) const
  {
    if (__isset.pluginName != rhs.__isset.pluginName)
      return false;
    else if (__isset.pluginName && !(pluginName == rhs.pluginName))
      return false;
    if (__isset.zoneId != rhs.__isset.zoneId)
      return false;
    else if (__isset.zoneId && !(zoneId == rhs.zoneId))
      return false;
    if (__isset.roomId != rhs.__isset.roomId)
      return false;
    else if (__isset.roomId && !(roomId == rhs.roomId))
      return false;
    if (__isset.sessionKey != rhs.__isset.sessionKey)
      return false;
    else if (__isset.sessionKey && !(sessionKey == rhs.sessionKey))
      return false;
    if (__isset.parameters != rhs.__isset.parameters)
      return false;
    else if (__isset.parameters && !(parameters == rhs.parameters))
      return false;
    return true;
  }
  bool operator != (const ThriftPluginRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftPluginRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftPluginRequest &a, ThriftPluginRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftPluginRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
