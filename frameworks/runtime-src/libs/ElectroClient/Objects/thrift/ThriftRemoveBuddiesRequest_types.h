/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftRemoveBuddiesRequest_TYPES_H
#define ThriftRemoveBuddiesRequest_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"




namespace es {

class ThriftRemoveBuddiesRequest;

typedef struct _ThriftRemoveBuddiesRequest__isset {
  _ThriftRemoveBuddiesRequest__isset() : buddyNames(false) {}
  bool buddyNames :1;
} _ThriftRemoveBuddiesRequest__isset;

class ThriftRemoveBuddiesRequest {
 public:

  ThriftRemoveBuddiesRequest(const ThriftRemoveBuddiesRequest&);
  ThriftRemoveBuddiesRequest& operator=(const ThriftRemoveBuddiesRequest&);
  ThriftRemoveBuddiesRequest() {
  }

  virtual ~ThriftRemoveBuddiesRequest() throw();
  std::vector<std::string>  buddyNames;

  _ThriftRemoveBuddiesRequest__isset __isset;

  void __set_buddyNames(const std::vector<std::string> & val);

  bool operator == (const ThriftRemoveBuddiesRequest & rhs) const
  {
    if (!(buddyNames == rhs.buddyNames))
      return false;
    return true;
  }
  bool operator != (const ThriftRemoveBuddiesRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftRemoveBuddiesRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftRemoveBuddiesRequest &a, ThriftRemoveBuddiesRequest &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftRemoveBuddiesRequest& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
