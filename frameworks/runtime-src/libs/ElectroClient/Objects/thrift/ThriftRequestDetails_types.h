/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftRequestDetails_TYPES_H
#define ThriftRequestDetails_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"


#include "ThriftFlattenedEsObject_types.h"


namespace es {

class ThriftRequestDetails;

typedef struct _ThriftRequestDetails__isset {
  _ThriftRequestDetails__isset() : pluginName(false), roomId(false), zoneId(false), parameters(false) {}
  bool pluginName :1;
  bool roomId :1;
  bool zoneId :1;
  bool parameters :1;
} _ThriftRequestDetails__isset;

class ThriftRequestDetails {
 public:

  ThriftRequestDetails(const ThriftRequestDetails&);
  ThriftRequestDetails& operator=(const ThriftRequestDetails&);
  ThriftRequestDetails() : pluginName(), roomId(0), zoneId(0) {
  }

  virtual ~ThriftRequestDetails() throw();
  std::string pluginName;
  int32_t roomId;
  int32_t zoneId;
   ::es::ThriftFlattenedEsObject parameters;

  _ThriftRequestDetails__isset __isset;

  void __set_pluginName(const std::string& val);

  void __set_roomId(const int32_t val);

  void __set_zoneId(const int32_t val);

  void __set_parameters(const  ::es::ThriftFlattenedEsObject& val);

  bool operator == (const ThriftRequestDetails & rhs) const
  {
    if (!(pluginName == rhs.pluginName))
      return false;
    if (!(roomId == rhs.roomId))
      return false;
    if (!(zoneId == rhs.zoneId))
      return false;
    if (!(parameters == rhs.parameters))
      return false;
    return true;
  }
  bool operator != (const ThriftRequestDetails &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftRequestDetails & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftRequestDetails &a, ThriftRequestDetails &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftRequestDetails& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
