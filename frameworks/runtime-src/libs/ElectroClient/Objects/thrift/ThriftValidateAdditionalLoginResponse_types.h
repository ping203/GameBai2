/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftValidateAdditionalLoginResponse_TYPES_H
#define ThriftValidateAdditionalLoginResponse_TYPES_H

#include <iosfwd>

#include "libs/Thrift.h"

#include "libs/TProtocol.h"
#include "libs/TTransport.h"




namespace es {

class ThriftValidateAdditionalLoginResponse;

typedef struct _ThriftValidateAdditionalLoginResponse__isset {
  _ThriftValidateAdditionalLoginResponse__isset() : approved(false), secret(false) {}
  bool approved :1;
  bool secret :1;
} _ThriftValidateAdditionalLoginResponse__isset;

class ThriftValidateAdditionalLoginResponse {
 public:

  ThriftValidateAdditionalLoginResponse(const ThriftValidateAdditionalLoginResponse&);
  ThriftValidateAdditionalLoginResponse& operator=(const ThriftValidateAdditionalLoginResponse&);
  ThriftValidateAdditionalLoginResponse() : approved(0), secret() {
  }

  virtual ~ThriftValidateAdditionalLoginResponse() throw();
  bool approved;
  std::string secret;

  _ThriftValidateAdditionalLoginResponse__isset __isset;

  void __set_approved(const bool val);

  void __set_secret(const std::string& val);

  bool operator == (const ThriftValidateAdditionalLoginResponse & rhs) const
  {
    if (!(approved == rhs.approved))
      return false;
    if (!(secret == rhs.secret))
      return false;
    return true;
  }
  bool operator != (const ThriftValidateAdditionalLoginResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftValidateAdditionalLoginResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftValidateAdditionalLoginResponse &a, ThriftValidateAdditionalLoginResponse &b);

inline std::ostream& operator<<(std::ostream& out, const ThriftValidateAdditionalLoginResponse& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
